 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package filltheblankspython;
import java.awt.Component;
import java.awt.Panel;
import java.awt.Point;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import javax.swing.*;



/**
 *
 * @author Joshua Mulcock
 */
public class Main extends javax.swing.JDialog {
private Data data;
private ArrayList<Word> code;
private ArrayList<Word> screenCode;
private ArrayList<Word> keyboard;
private static WordSwitcher switcher;
private int taskNum, taskSize;
   
/**
     * Creates new form Main
     */
    public Main(java.awt.Frame parent, boolean modal) { 
        super(parent, modal);
        initComponents();
        //parent.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        switcher = new WordSwitcher();
        data = new Data(switcher);
        taskSize = data.getTasksSize();
        taskNum = 0;
        newTask(taskNum);
        
    }

    private void setLblNum(int taskNum, int taskSize){ //not working
        int size = taskSize;
        int num = taskNum + 1;
        lblNum.setText(num +"/"+ size);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTask = new java.awt.Panel();
        lblTask = new javax.swing.JLabel();
        panelKeyboard = new java.awt.Panel();
        panelCode = new java.awt.Panel();
        panelFunction = new javax.swing.JPanel();
        btnCheck = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        lblNum = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1920, 1080));

        panelTask.setBackground(new java.awt.Color(204, 204, 255));
        panelTask.setMaximumSize(new java.awt.Dimension(420, 600));
        panelTask.setMinimumSize(new java.awt.Dimension(420, 600));
        panelTask.setPreferredSize(new java.awt.Dimension(420, 600));

        lblTask.setText("jLabel1");

        javax.swing.GroupLayout panelTaskLayout = new javax.swing.GroupLayout(panelTask);
        panelTask.setLayout(panelTaskLayout);
        panelTaskLayout.setHorizontalGroup(
            panelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTaskLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTask)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTaskLayout.setVerticalGroup(
            panelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTaskLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTask)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelKeyboard.setBackground(new java.awt.Color(204, 204, 255));
        panelKeyboard.setMaximumSize(new java.awt.Dimension(1500, 400));
        panelKeyboard.setPreferredSize(new java.awt.Dimension(1500, 400));

        javax.swing.GroupLayout panelKeyboardLayout = new javax.swing.GroupLayout(panelKeyboard);
        panelKeyboard.setLayout(panelKeyboardLayout);
        panelKeyboardLayout.setHorizontalGroup(
            panelKeyboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1495, Short.MAX_VALUE)
        );
        panelKeyboardLayout.setVerticalGroup(
            panelKeyboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        panelCode.setBackground(new java.awt.Color(204, 204, 255));
        panelCode.setMaximumSize(new java.awt.Dimension(900, 400));
        panelCode.setMinimumSize(new java.awt.Dimension(900, 400));
        panelCode.setPreferredSize(new java.awt.Dimension(900, 400));

        javax.swing.GroupLayout panelCodeLayout = new javax.swing.GroupLayout(panelCode);
        panelCode.setLayout(panelCodeLayout);
        panelCodeLayout.setHorizontalGroup(
            panelCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1495, Short.MAX_VALUE)
        );
        panelCodeLayout.setVerticalGroup(
            panelCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 670, Short.MAX_VALUE)
        );

        panelFunction.setBackground(new java.awt.Color(204, 204, 255));
        panelFunction.setMaximumSize(new java.awt.Dimension(320, 400));
        panelFunction.setMinimumSize(new java.awt.Dimension(320, 400));
        panelFunction.setPreferredSize(new java.awt.Dimension(320, 400));

        btnCheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/alphaTick.png"))); // NOI18N
        btnCheck.setName("btnCheck"); // NOI18N
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/alphaCross.png"))); // NOI18N
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        lblNum.setText("? / ?");

        javax.swing.GroupLayout panelFunctionLayout = new javax.swing.GroupLayout(panelFunction);
        panelFunction.setLayout(panelFunctionLayout);
        panelFunctionLayout.setHorizontalGroup(
            panelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFunctionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRemove)
                .addContainerGap())
            .addGroup(panelFunctionLayout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(lblNum)
                .addContainerGap(199, Short.MAX_VALUE))
        );
        panelFunctionLayout.setVerticalGroup(
            panelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFunctionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemove)
                    .addComponent(btnCheck))
                .addGap(68, 68, 68))
        );

        btnCheck.getAccessibleContext().setAccessibleName("btnCheck");
        btnRemove.getAccessibleContext().setAccessibleName("btnRemove");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelFunction, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelKeyboard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelKeyboard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelFunction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        boolean finished = true;
        boolean correct = false;
        ArrayList<JLabel> list = new ArrayList<>();
        Word word1;
        Word word2;
        for(Word word : screenCode){
            if (word.isBlank() == true){
                finished = false;
            }
        } 
        
        if (finished == false) {
            JOptionPane.showMessageDialog(null, "Not all boxes filled!");
            correct = false;
        }
        
        else {
            for (int i = 0; i < code.size(); i++){
                word1 = screenCode.get(i);
                word2 = code.get(i);
                if (!(word1.getWord().equals(word2.getWord()))){ //reversers the output so it checks if false;
                    correct = false;
                    int x, y;
                    x = word1.getX();
                    y = word1.getY();
                    Point p = new Point(x, y);
                    JLabel label = new JLabel();
                    label.setLocation(p);
                    label.setIcon(new javax.swing.ImageIcon(getClass().getResource("Images/alphaWrong.png")));
                    list.add(label);
                }
                
                else if ((word1.getWord().equals(word2.getWord())) && word1.isBlank() == false){
                    int x, y;
                    x = word1.getX();
                    y = word1.getY();
                    Point p = new Point(x, y);
                    JLabel label = new JLabel();
                    label.setLocation(p);
                    label.setIcon(new javax.swing.ImageIcon(getClass().getResource("Images/alphaRight.png")));
                    list.add(label);
                }
                
            }
            //shows whats wrong or correct then hides the images again.
            try{
            TimeUnit.SECONDS.sleep(1);
            } catch (InterruptedException ex){
                System.out.println("Sleep failed");
            }
            
            for(JLabel lab : list){
                lab.setVisible(false); // hides images.
            }
            
        }
        
        if (correct == true){
                    System.out.println("Correct");
                    JOptionPane.showMessageDialog(null, "Correct");
                    removeComponents(panelCode);
                    removeComponents(panelKeyboard);
                    taskNum +=1;
                    newTask(taskNum);     //goes to next task
        }
        
        else {
            System.out.println("NOT CORRECT");
            System.out.println("ScreenCode\t::\tCode");
            for(int i=0; i < code.size(); i++){
                Word s1 = screenCode.get(i);
                Word s2 = screenCode.get(i);
                System.out.println(s1.getWord() + "\t::\t" + s2.getWord());
                System.out.println(boolToStr(s1) + "\t::\t" + boolToStr(s2));
            }
        }
    }//GEN-LAST:event_btnCheckActionPerformed

    String boolToStr(Word w){
        String bool;
        if(w.isBlank()){
            bool = "true";
        }
        else {
            bool = "false";
        }
        return bool;
    }
    
    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        removeComponents(panelCode);
        removeComponents(panelKeyboard);
        newTask(taskNum);
    }//GEN-LAST:event_btnRemoveActionPerformed

    private static void removeComponents(Panel p){
        Component[] panel = p.getComponents();
        for(Component comp : panel){
            p.remove(comp);
        }
       p.revalidate();
       p.repaint();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main dialog = new Main(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private void newTask(int level) {
        code = new ArrayList<>();
        keyboard = new ArrayList<>();
        setLblNum(taskNum, taskSize);
        keyboard = data.getKeyboard(level);    //shallow copy
        code = data.getCode(level);
        screenCode = new ArrayList<Word>(code); //contains the information that will change.
        String task = data.getTask(level);
        lblTask.setText(task);
        setup(screenCode, keyboard);
        
    }
    
    private static void setup(ArrayList<Word> c, ArrayList<Word> kb){
        newCode(c);
        newKeyboard(kb);  
    }
    
    
    public static void refresh(ArrayList<Word> c, ArrayList<Word> kb){
        //This take is used to be able to update the UI when switch has takn place.
        removeComponents(panelCode);
        removeComponents(panelKeyboard);
        setup(c, kb);
    }
    
    private static void newCode(ArrayList<Word> c){
        switcher.setCodeList(c);
        int xCoord = panelCode.getX();
        int yCoord = panelCode.getY();
        int num = 0;
        for(Word word : c) {
            String name = "code" + num;
            //System.out.println("Word:" + word.getWord());
            if (word.getWord().equals("@newline@")){
                yCoord+=60;
                xCoord = panelCode.getX();
                word.newLabel(0, 0, false, name);
                word.getLabel().setVisible(false);
            }
            else {
                boolean kb = false;         //determines if keyboard to have those special options in the new label.
                word.newLabel(xCoord, yCoord, kb, name);
                word.setLabelName(name);
                panelCode.add(word.getLabel());
                xCoord+=50;
            }
            num++;
        }
    }
    
private static void newKeyboard(ArrayList<Word> k){
        switcher.setKeyboardList(k);
        int xCoord = 0;
        int yCoord = 0;
        int num=0;
        for (Word word : k){
            String name = "key"+num;
            word.newLabel(xCoord, yCoord, true, name);
            word.setLabelName(name);
            panelKeyboard.add(word.getLabel());
            xCoord+=50;
            num++;
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnRemove;
    private javax.swing.JLabel lblNum;
    private javax.swing.JLabel lblTask;
    private static java.awt.Panel panelCode;
    private javax.swing.JPanel panelFunction;
    private static java.awt.Panel panelKeyboard;
    private java.awt.Panel panelTask;
    // End of variables declaration//GEN-END:variables
}
