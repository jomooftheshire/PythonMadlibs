 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package filltheblankspython;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.*;



/**
 *
 * @author Joshua Mulcock
 */
public class Main extends javax.swing.JDialog {
private Data data;
private ArrayList<Word> code;
private ArrayList<Word> screenCode;
private ArrayList<Word> keyboard;
private WordSwitcher switcher;
private int taskNum, taskSize;
   
/**
     * Creates new form Main
     */
    public Main(java.awt.Frame parent, boolean modal) { 
        super(parent, modal);
        initComponents();
        //parent.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        switcher = new WordSwitcher();
        data = new Data(switcher);
        taskSize = data.getTasksSize();
        taskNum = 0;
        newTask(taskNum);
        
    }
    
    public void refresh(){
        screenCode = switcher.getCode();
        keyboard = switcher.getKeyboard();
        
    }

    private void setLblNum(int taskNum, int taskSize){ //not working
        int size = taskSize;
        int num = taskNum + 1;
        lblNum.setText(num +"/"+ size);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTask = new java.awt.Panel();
        lblTask = new javax.swing.JLabel();
        panelKeyboard = new java.awt.Panel();
        panelCode = new java.awt.Panel();
        panelFunction = new javax.swing.JPanel();
        btnCheck = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        lblNum = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1920, 1080));

        panelTask.setBackground(new java.awt.Color(204, 204, 255));
        panelTask.setMaximumSize(new java.awt.Dimension(420, 600));
        panelTask.setMinimumSize(new java.awt.Dimension(420, 600));
        panelTask.setPreferredSize(new java.awt.Dimension(420, 600));

        lblTask.setText("jLabel1");

        javax.swing.GroupLayout panelTaskLayout = new javax.swing.GroupLayout(panelTask);
        panelTask.setLayout(panelTaskLayout);
        panelTaskLayout.setHorizontalGroup(
            panelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTaskLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTask)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTaskLayout.setVerticalGroup(
            panelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTaskLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTask)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelKeyboard.setBackground(new java.awt.Color(204, 204, 255));
        panelKeyboard.setMaximumSize(new java.awt.Dimension(1500, 400));
        panelKeyboard.setPreferredSize(new java.awt.Dimension(1500, 400));

        javax.swing.GroupLayout panelKeyboardLayout = new javax.swing.GroupLayout(panelKeyboard);
        panelKeyboard.setLayout(panelKeyboardLayout);
        panelKeyboardLayout.setHorizontalGroup(
            panelKeyboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1495, Short.MAX_VALUE)
        );
        panelKeyboardLayout.setVerticalGroup(
            panelKeyboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        panelCode.setBackground(new java.awt.Color(204, 204, 255));
        panelCode.setMaximumSize(new java.awt.Dimension(900, 400));
        panelCode.setMinimumSize(new java.awt.Dimension(900, 400));
        panelCode.setPreferredSize(new java.awt.Dimension(900, 400));

        javax.swing.GroupLayout panelCodeLayout = new javax.swing.GroupLayout(panelCode);
        panelCode.setLayout(panelCodeLayout);
        panelCodeLayout.setHorizontalGroup(
            panelCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1495, Short.MAX_VALUE)
        );
        panelCodeLayout.setVerticalGroup(
            panelCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 670, Short.MAX_VALUE)
        );

        panelFunction.setBackground(new java.awt.Color(204, 204, 255));
        panelFunction.setMaximumSize(new java.awt.Dimension(320, 400));
        panelFunction.setMinimumSize(new java.awt.Dimension(320, 400));
        panelFunction.setPreferredSize(new java.awt.Dimension(320, 400));

        btnCheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filltheblankspython/Images/alphaTick.png"))); // NOI18N
        btnCheck.setName("btnCheck"); // NOI18N
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filltheblankspython/Images/alphaCross.png"))); // NOI18N
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        lblNum.setText("? / ?");

        javax.swing.GroupLayout panelFunctionLayout = new javax.swing.GroupLayout(panelFunction);
        panelFunction.setLayout(panelFunctionLayout);
        panelFunctionLayout.setHorizontalGroup(
            panelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFunctionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRemove)
                .addContainerGap())
            .addGroup(panelFunctionLayout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(lblNum)
                .addContainerGap(199, Short.MAX_VALUE))
        );
        panelFunctionLayout.setVerticalGroup(
            panelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFunctionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemove)
                    .addComponent(btnCheck))
                .addGap(68, 68, 68))
        );

        btnCheck.getAccessibleContext().setAccessibleName("btnCheck");
        btnRemove.getAccessibleContext().setAccessibleName("btnRemove");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelFunction, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelKeyboard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelKeyboard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelFunction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        boolean finished = true;
        boolean correct = true;
        Word word1;
        Word word2;
        for(Word word : screenCode){
            if (word.isBlank() == true){
                finished = false;
            }
        } 
        
        if (finished == false) {
            JOptionPane.showMessageDialog(null, "Not all boxes filled!");
        }
        
        else {
            for (int i = 0; i < code.size(); i++){
                word1 = screenCode.get(i);
                word2 = code.get(i);
                if (!(word1.getWord().equals(word2.getWord()))){ //reversers the output so it checks if false;
                    correct = false;
                    int x, y;
                    x = word1.getX();
                    y = word1.getY();
                    // need to put the image inside of sowmthing to place azt x+25, y-5 
                        //also need to look at overlaying objects on GUI.
                    //maybe it should be benhind the label
                }
                
                else if ((word1.getWord().equals(word2.getWord())) && word1.isBlank() == false){
                    //make a tick to the back of the label
                }
                
                if (correct == true){
                    JOptionPane.showMessageDialog(null, "Correct");
                    taskNum +=1;
                    newTask(taskNum);     //goes to next task
                }
            }
        }
    }//GEN-LAST:event_btnCheckActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        newTask(taskNum);
    }//GEN-LAST:event_btnRemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main dialog = new Main(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private void newTask(int level) {
        code = new ArrayList<>();
        keyboard = new ArrayList<>();
        setLblNum(taskNum, taskSize);
        keyboard = data.getKeyboard(level);    //shallow copy
        code = data.getCode(level);
        screenCode = new ArrayList<Word>(code); //contains the information that will change.
        String task = data.getTask(level);
        lblTask.setText(task);  
        newKeyboard(keyboard);
        newCode(screenCode);  
        //printLabelLocation();
        objectchecker();
    }
    
    private void objectchecker(){
        boolean found = false;
        System.out.println("Code:");
        for (Word c : screenCode){        
            for (Word k : keyboard){
                if(c.equals(k)){
                    System.out.println("Found: " + "c:" + c.getWord() + ", k:" + k.getWord());
                    found = true;
                }
            }
        }
        if(found == false){
            System.out.println("No marches found");
        }
    }
    
//    private void printLabelLocation(){
//        System.out.println("Code:");
//        for(Word c : screenCode){
//            try {
//                System.out.println(c.getWord() + ":" + "[" + c.getLabel().getX() + "," + c.getLabel().getY() + "]");
//            }
//            catch (java.awt.IllegalComponentStateException x){
//                System.out.println("No Place:" + c.getWord());
//            }
//        }
//        
//        System.out.println();
//        System.out.println("Keyboard");
//        for(Word k : keyboard){
//            try {
//                System.out.println(k.getWord() + ":" + "[" + k.getLabel().getX() + "," + k.getLabel().getY() + "]");
//            }
//            catch (java.awt.IllegalComponentStateException x){
//                System.out.println("No Place:" + k.getWord());
//            }
//        }
//        
//    }
    
    
    private void newCode(ArrayList<Word> c){
        switcher.setCodeList(screenCode);
        int xCoord = panelCode.getX();
        int yCoord = panelCode.getY();
        int num = 0;
        for(Word word : screenCode) {
            //System.out.println("Word:" + word.getWord());
            if (word.getWord().equals("@newline@")){
                yCoord+=60;
                xCoord = panelCode.getX();
            }
            else {
                String name = "code" + num;
                boolean kb = false;         //determines if keyboard to have those special options in the new label.
                word.newLabel(xCoord, yCoord, kb);
                word.setLabelName(name);
                panelCode.add(word.getLabel());
                xCoord+=50;
                num++;
            }
        }
    }
    
    private void newKeyboard(ArrayList<Word> k){
        switcher.setKeyboardList(keyboard);
        //int xCoord = panelKeyboard.getX();
        //int yCoord = panelKeyboard.getY();  //this will have to be revamped to make it more central and equal eventually
        int xCoord = 0;
        int yCoord = 0;
       
        
        int num=0;
        for (Word word : keyboard){
            String name = "key"+num;
            boolean kb = true;
            word.newLabel(xCoord, yCoord, kb);
            word.setLabelName(name);
            panelKeyboard.add(word.getLabel());
            System.out.println("[" + word.getLabel().getX() + "," + word.getLabel().getX() + "]");
            xCoord+=50;
            num++;
        }
        
    }
    
    public void addtoPanelCode(JLabel label) {panelCode.add(label);}
    
    public void addtoPanelKB(JLabel label) {panelKeyboard.add(label);}
    
    
    //testing if kb and blank are sma evalues.
    public void memoryLocation(){
        for (Word b: code){
            if(b.isBlank() == true){
                for(Word k : keyboard){
                    if(k == b){
                        System.out.println("Match found");
                    }
                }
            }
        }
        System.out.println("Finished");
    }
    
    
//    public void selectedLabel(String name){
//        //This uses the name as a reference currently, however would be preferable
//        //if it could hold the word.
//        if(guard == false){
//            temp1 = name;
//            guard = true;
//        }
//        
//        else {
//            temp2 = name;
//            guard = false;
//        }
//    }
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnRemove;
    private javax.swing.JLabel lblNum;
    private javax.swing.JLabel lblTask;
    private java.awt.Panel panelCode;
    private javax.swing.JPanel panelFunction;
    private java.awt.Panel panelKeyboard;
    private java.awt.Panel panelTask;
    // End of variables declaration//GEN-END:variables
}
